#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Accounting.Modal
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Accounting")]
	public partial class AccountingDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblStock(tblStock instance);
    partial void UpdatetblStock(tblStock instance);
    partial void DeletetblStock(tblStock instance);
    partial void InserttblCategory(tblCategory instance);
    partial void UpdatetblCategory(tblCategory instance);
    partial void DeletetblCategory(tblCategory instance);
    partial void InserttblCity(tblCity instance);
    partial void UpdatetblCity(tblCity instance);
    partial void DeletetblCity(tblCity instance);
    partial void InserttblCompany(tblCompany instance);
    partial void UpdatetblCompany(tblCompany instance);
    partial void DeletetblCompany(tblCompany instance);
    partial void InserttblEmployee(tblEmployee instance);
    partial void UpdatetblEmployee(tblEmployee instance);
    partial void DeletetblEmployee(tblEmployee instance);
    partial void InserttblProduct(tblProduct instance);
    partial void UpdatetblProduct(tblProduct instance);
    partial void DeletetblProduct(tblProduct instance);
    partial void InserttblPurchasing(tblPurchasing instance);
    partial void UpdatetblPurchasing(tblPurchasing instance);
    partial void DeletetblPurchasing(tblPurchasing instance);
    partial void InserttblSalesDown(tblSalesDown instance);
    partial void UpdatetblSalesDown(tblSalesDown instance);
    partial void DeletetblSalesDown(tblSalesDown instance);
    partial void InserttblSalesUp(tblSalesUp instance);
    partial void UpdatetblSalesUp(tblSalesUp instance);
    partial void DeletetblSalesUp(tblSalesUp instance);
    partial void InserttblShipper(tblShipper instance);
    partial void UpdatetblShipper(tblShipper instance);
    partial void DeletetblShipper(tblShipper instance);
    #endregion
		
		public AccountingDBDataContext() : 
				base(global::Accounting.Properties.Settings.Default.AccountingConnectionString5, mappingSource)
		{
			OnCreated();
		}
		
		public AccountingDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountingDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountingDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountingDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblStock> tblStocks
		{
			get
			{
				return this.GetTable<tblStock>();
			}
		}
		
		public System.Data.Linq.Table<tblCategory> tblCategories
		{
			get
			{
				return this.GetTable<tblCategory>();
			}
		}
		
		public System.Data.Linq.Table<tblCity> tblCities
		{
			get
			{
				return this.GetTable<tblCity>();
			}
		}
		
		public System.Data.Linq.Table<tblCompany> tblCompanies
		{
			get
			{
				return this.GetTable<tblCompany>();
			}
		}
		
		public System.Data.Linq.Table<tblEmployee> tblEmployees
		{
			get
			{
				return this.GetTable<tblEmployee>();
			}
		}
		
		public System.Data.Linq.Table<tblProduct> tblProducts
		{
			get
			{
				return this.GetTable<tblProduct>();
			}
		}
		
		public System.Data.Linq.Table<tblPurchasing> tblPurchasings
		{
			get
			{
				return this.GetTable<tblPurchasing>();
			}
		}
		
		public System.Data.Linq.Table<tblSalesDown> tblSalesDowns
		{
			get
			{
				return this.GetTable<tblSalesDown>();
			}
		}
		
		public System.Data.Linq.Table<tblSalesUp> tblSalesUps
		{
			get
			{
				return this.GetTable<tblSalesUp>();
			}
		}
		
		public System.Data.Linq.Table<tblShipper> tblShippers
		{
			get
			{
				return this.GetTable<tblShipper>();
			}
		}
		
		public System.Data.Linq.Table<vwAli> vwAlis
		{
			get
			{
				return this.GetTable<vwAli>();
			}
		}
		
		public System.Data.Linq.Table<ViewUp> ViewUps
		{
			get
			{
				return this.GetTable<ViewUp>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblStock")]
	public partial class tblStock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ProductID;
		
		private string _LotSerial;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private EntityRef<tblProduct> _tblProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProductIDChanging(System.Nullable<int> value);
    partial void OnProductIDChanged();
    partial void OnLotSerialChanging(string value);
    partial void OnLotSerialChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    #endregion
		
		public tblStock()
		{
			this._tblProduct = default(EntityRef<tblProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int")]
		public System.Nullable<int> ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._tblProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotSerial", DbType="NVarChar(50)")]
		public string LotSerial
		{
			get
			{
				return this._LotSerial;
			}
			set
			{
				if ((this._LotSerial != value))
				{
					this.OnLotSerialChanging(value);
					this.SendPropertyChanging();
					this._LotSerial = value;
					this.SendPropertyChanged("LotSerial");
					this.OnLotSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProduct_tblStock", Storage="_tblProduct", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true)]
		public tblProduct tblProduct
		{
			get
			{
				return this._tblProduct.Entity;
			}
			set
			{
				tblProduct previousValue = this._tblProduct.Entity;
				if (((previousValue != value) 
							|| (this._tblProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblProduct.Entity = null;
						previousValue.tblStocks.Remove(this);
					}
					this._tblProduct.Entity = value;
					if ((value != null))
					{
						value.tblStocks.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCategory")]
	public partial class tblCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CategoryName;
		
		private EntitySet<tblProduct> _tblProducts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    #endregion
		
		public tblCategory()
		{
			this._tblProducts = new EntitySet<tblProduct>(new Action<tblProduct>(this.attach_tblProducts), new Action<tblProduct>(this.detach_tblProducts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(100)")]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCategory_tblProduct", Storage="_tblProducts", ThisKey="ID", OtherKey="CategoryID")]
		public EntitySet<tblProduct> tblProducts
		{
			get
			{
				return this._tblProducts;
			}
			set
			{
				this._tblProducts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblProducts(tblProduct entity)
		{
			this.SendPropertyChanging();
			entity.tblCategory = this;
		}
		
		private void detach_tblProducts(tblProduct entity)
		{
			this.SendPropertyChanging();
			entity.tblCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCity")]
	public partial class tblCity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _City;
		
		private string _Territory;
		
		private EntitySet<tblCompany> _tblCompanies;
		
		private EntitySet<tblSalesUp> _tblSalesUps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnTerritoryChanging(string value);
    partial void OnTerritoryChanged();
    #endregion
		
		public tblCity()
		{
			this._tblCompanies = new EntitySet<tblCompany>(new Action<tblCompany>(this.attach_tblCompanies), new Action<tblCompany>(this.detach_tblCompanies));
			this._tblSalesUps = new EntitySet<tblSalesUp>(new Action<tblSalesUp>(this.attach_tblSalesUps), new Action<tblSalesUp>(this.detach_tblSalesUps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Territory", DbType="NVarChar(50)")]
		public string Territory
		{
			get
			{
				return this._Territory;
			}
			set
			{
				if ((this._Territory != value))
				{
					this.OnTerritoryChanging(value);
					this.SendPropertyChanging();
					this._Territory = value;
					this.SendPropertyChanged("Territory");
					this.OnTerritoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCity_tblCompany", Storage="_tblCompanies", ThisKey="ID", OtherKey="CityID")]
		public EntitySet<tblCompany> tblCompanies
		{
			get
			{
				return this._tblCompanies;
			}
			set
			{
				this._tblCompanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCity_tblSalesUp", Storage="_tblSalesUps", ThisKey="ID", OtherKey="CityID")]
		public EntitySet<tblSalesUp> tblSalesUps
		{
			get
			{
				return this._tblSalesUps;
			}
			set
			{
				this._tblSalesUps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblCompanies(tblCompany entity)
		{
			this.SendPropertyChanging();
			entity.tblCity = this;
		}
		
		private void detach_tblCompanies(tblCompany entity)
		{
			this.SendPropertyChanging();
			entity.tblCity = null;
		}
		
		private void attach_tblSalesUps(tblSalesUp entity)
		{
			this.SendPropertyChanging();
			entity.tblCity = this;
		}
		
		private void detach_tblSalesUps(tblSalesUp entity)
		{
			this.SendPropertyChanging();
			entity.tblCity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCompany")]
	public partial class tblCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CompNo;
		
		private string _Name;
		
		private string _Address;
		
		private System.Nullable<int> _CityID;
		
		private string _Phone;
		
		private string _Mobile;
		
		private string _TaxOffice;
		
		private string _TaxNo;
		
		private string _Fax;
		
		private string _Email;
		
		private string _Authorized;
		
		private string _CusSup;
		
		private EntitySet<tblPurchasing> _tblPurchasings;
		
		private EntitySet<tblSalesUp> _tblSalesUps;
		
		private EntityRef<tblCity> _tblCity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCompNoChanging(System.Nullable<int> value);
    partial void OnCompNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityIDChanging(System.Nullable<int> value);
    partial void OnCityIDChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnTaxOfficeChanging(string value);
    partial void OnTaxOfficeChanged();
    partial void OnTaxNoChanging(string value);
    partial void OnTaxNoChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAuthorizedChanging(string value);
    partial void OnAuthorizedChanged();
    partial void OnCusSupChanging(string value);
    partial void OnCusSupChanged();
    #endregion
		
		public tblCompany()
		{
			this._tblPurchasings = new EntitySet<tblPurchasing>(new Action<tblPurchasing>(this.attach_tblPurchasings), new Action<tblPurchasing>(this.detach_tblPurchasings));
			this._tblSalesUps = new EntitySet<tblSalesUp>(new Action<tblSalesUp>(this.attach_tblSalesUps), new Action<tblSalesUp>(this.detach_tblSalesUps));
			this._tblCity = default(EntityRef<tblCity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompNo", DbType="Int")]
		public System.Nullable<int> CompNo
		{
			get
			{
				return this._CompNo;
			}
			set
			{
				if ((this._CompNo != value))
				{
					this.OnCompNoChanging(value);
					this.SendPropertyChanging();
					this._CompNo = value;
					this.SendPropertyChanged("CompNo");
					this.OnCompNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(350)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int")]
		public System.Nullable<int> CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					if (this._tblCity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(20)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxOffice", DbType="NVarChar(100)")]
		public string TaxOffice
		{
			get
			{
				return this._TaxOffice;
			}
			set
			{
				if ((this._TaxOffice != value))
				{
					this.OnTaxOfficeChanging(value);
					this.SendPropertyChanging();
					this._TaxOffice = value;
					this.SendPropertyChanged("TaxOffice");
					this.OnTaxOfficeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxNo", DbType="NVarChar(100)")]
		public string TaxNo
		{
			get
			{
				return this._TaxNo;
			}
			set
			{
				if ((this._TaxNo != value))
				{
					this.OnTaxNoChanging(value);
					this.SendPropertyChanging();
					this._TaxNo = value;
					this.SendPropertyChanged("TaxNo");
					this.OnTaxNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(20)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Authorized", DbType="NVarChar(50)")]
		public string Authorized
		{
			get
			{
				return this._Authorized;
			}
			set
			{
				if ((this._Authorized != value))
				{
					this.OnAuthorizedChanging(value);
					this.SendPropertyChanging();
					this._Authorized = value;
					this.SendPropertyChanged("Authorized");
					this.OnAuthorizedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CusSup", DbType="NVarChar(5)")]
		public string CusSup
		{
			get
			{
				return this._CusSup;
			}
			set
			{
				if ((this._CusSup != value))
				{
					this.OnCusSupChanging(value);
					this.SendPropertyChanging();
					this._CusSup = value;
					this.SendPropertyChanged("CusSup");
					this.OnCusSupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCompany_tblPurchasing", Storage="_tblPurchasings", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<tblPurchasing> tblPurchasings
		{
			get
			{
				return this._tblPurchasings;
			}
			set
			{
				this._tblPurchasings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCompany_tblSalesUp", Storage="_tblSalesUps", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<tblSalesUp> tblSalesUps
		{
			get
			{
				return this._tblSalesUps;
			}
			set
			{
				this._tblSalesUps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCity_tblCompany", Storage="_tblCity", ThisKey="CityID", OtherKey="ID", IsForeignKey=true)]
		public tblCity tblCity
		{
			get
			{
				return this._tblCity.Entity;
			}
			set
			{
				tblCity previousValue = this._tblCity.Entity;
				if (((previousValue != value) 
							|| (this._tblCity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCity.Entity = null;
						previousValue.tblCompanies.Remove(this);
					}
					this._tblCity.Entity = value;
					if ((value != null))
					{
						value.tblCompanies.Add(this);
						this._CityID = value.ID;
					}
					else
					{
						this._CityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblCity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPurchasings(tblPurchasing entity)
		{
			this.SendPropertyChanging();
			entity.tblCompany = this;
		}
		
		private void detach_tblPurchasings(tblPurchasing entity)
		{
			this.SendPropertyChanging();
			entity.tblCompany = null;
		}
		
		private void attach_tblSalesUps(tblSalesUp entity)
		{
			this.SendPropertyChanging();
			entity.tblCompany = this;
		}
		
		private void detach_tblSalesUps(tblSalesUp entity)
		{
			this.SendPropertyChanging();
			entity.tblCompany = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEmployee")]
	public partial class tblEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Title;
		
		private System.Nullable<System.DateTime> _HireDate;
		
		private string _Phone;
		
		private EntitySet<tblPurchasing> _tblPurchasings;
		
		private EntitySet<tblSalesUp> _tblSalesUps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnHireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHireDateChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    #endregion
		
		public tblEmployee()
		{
			this._tblPurchasings = new EntitySet<tblPurchasing>(new Action<tblPurchasing>(this.attach_tblPurchasings), new Action<tblPurchasing>(this.detach_tblPurchasings));
			this._tblSalesUps = new EntitySet<tblSalesUp>(new Action<tblSalesUp>(this.attach_tblSalesUps), new Action<tblSalesUp>(this.detach_tblSalesUps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HireDate", DbType="Date")]
		public System.Nullable<System.DateTime> HireDate
		{
			get
			{
				return this._HireDate;
			}
			set
			{
				if ((this._HireDate != value))
				{
					this.OnHireDateChanging(value);
					this.SendPropertyChanging();
					this._HireDate = value;
					this.SendPropertyChanged("HireDate");
					this.OnHireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEmployee_tblPurchasing", Storage="_tblPurchasings", ThisKey="ID", OtherKey="EmployeeID")]
		public EntitySet<tblPurchasing> tblPurchasings
		{
			get
			{
				return this._tblPurchasings;
			}
			set
			{
				this._tblPurchasings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEmployee_tblSalesUp", Storage="_tblSalesUps", ThisKey="ID", OtherKey="EmployeeID")]
		public EntitySet<tblSalesUp> tblSalesUps
		{
			get
			{
				return this._tblSalesUps;
			}
			set
			{
				this._tblSalesUps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPurchasings(tblPurchasing entity)
		{
			this.SendPropertyChanging();
			entity.tblEmployee = this;
		}
		
		private void detach_tblPurchasings(tblPurchasing entity)
		{
			this.SendPropertyChanging();
			entity.tblEmployee = null;
		}
		
		private void attach_tblSalesUps(tblSalesUp entity)
		{
			this.SendPropertyChanging();
			entity.tblEmployee = this;
		}
		
		private void detach_tblSalesUps(tblSalesUp entity)
		{
			this.SendPropertyChanging();
			entity.tblEmployee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblProduct")]
	public partial class tblProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ProNo;
		
		private string _Name;
		
		private System.Nullable<int> _CategoryID;
		
		private string _Note;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private EntitySet<tblStock> _tblStocks;
		
		private EntitySet<tblPurchasing> _tblPurchasings;
		
		private EntitySet<tblSalesDown> _tblSalesDowns;
		
		private EntityRef<tblCategory> _tblCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProNoChanging(System.Nullable<int> value);
    partial void OnProNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCategoryIDChanging(System.Nullable<int> value);
    partial void OnCategoryIDChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    #endregion
		
		public tblProduct()
		{
			this._tblStocks = new EntitySet<tblStock>(new Action<tblStock>(this.attach_tblStocks), new Action<tblStock>(this.detach_tblStocks));
			this._tblPurchasings = new EntitySet<tblPurchasing>(new Action<tblPurchasing>(this.attach_tblPurchasings), new Action<tblPurchasing>(this.detach_tblPurchasings));
			this._tblSalesDowns = new EntitySet<tblSalesDown>(new Action<tblSalesDown>(this.attach_tblSalesDowns), new Action<tblSalesDown>(this.detach_tblSalesDowns));
			this._tblCategory = default(EntityRef<tblCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProNo", DbType="Int")]
		public System.Nullable<int> ProNo
		{
			get
			{
				return this._ProNo;
			}
			set
			{
				if ((this._ProNo != value))
				{
					this.OnProNoChanging(value);
					this.SendPropertyChanging();
					this._ProNo = value;
					this.SendPropertyChanged("ProNo");
					this.OnProNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int")]
		public System.Nullable<int> CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._tblCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProduct_tblStock", Storage="_tblStocks", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<tblStock> tblStocks
		{
			get
			{
				return this._tblStocks;
			}
			set
			{
				this._tblStocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProduct_tblPurchasing", Storage="_tblPurchasings", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<tblPurchasing> tblPurchasings
		{
			get
			{
				return this._tblPurchasings;
			}
			set
			{
				this._tblPurchasings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProduct_tblSalesDown", Storage="_tblSalesDowns", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<tblSalesDown> tblSalesDowns
		{
			get
			{
				return this._tblSalesDowns;
			}
			set
			{
				this._tblSalesDowns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCategory_tblProduct", Storage="_tblCategory", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true)]
		public tblCategory tblCategory
		{
			get
			{
				return this._tblCategory.Entity;
			}
			set
			{
				tblCategory previousValue = this._tblCategory.Entity;
				if (((previousValue != value) 
							|| (this._tblCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCategory.Entity = null;
						previousValue.tblProducts.Remove(this);
					}
					this._tblCategory.Entity = value;
					if ((value != null))
					{
						value.tblProducts.Add(this);
						this._CategoryID = value.ID;
					}
					else
					{
						this._CategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblStocks(tblStock entity)
		{
			this.SendPropertyChanging();
			entity.tblProduct = this;
		}
		
		private void detach_tblStocks(tblStock entity)
		{
			this.SendPropertyChanging();
			entity.tblProduct = null;
		}
		
		private void attach_tblPurchasings(tblPurchasing entity)
		{
			this.SendPropertyChanging();
			entity.tblProduct = this;
		}
		
		private void detach_tblPurchasings(tblPurchasing entity)
		{
			this.SendPropertyChanging();
			entity.tblProduct = null;
		}
		
		private void attach_tblSalesDowns(tblSalesDown entity)
		{
			this.SendPropertyChanging();
			entity.tblProduct = this;
		}
		
		private void detach_tblSalesDowns(tblSalesDown entity)
		{
			this.SendPropertyChanging();
			entity.tblProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPurchasing")]
	public partial class tblPurchasing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _PurNo;
		
		private System.Nullable<int> _CompanyID;
		
		private System.Nullable<int> _ProductID;
		
		private string _LotSerial;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<decimal> _PurchasingPrice;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<int> _EmployeeID;
		
		private EntityRef<tblCompany> _tblCompany;
		
		private EntityRef<tblEmployee> _tblEmployee;
		
		private EntityRef<tblProduct> _tblProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPurNoChanging(System.Nullable<int> value);
    partial void OnPurNoChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    partial void OnProductIDChanging(System.Nullable<int> value);
    partial void OnProductIDChanged();
    partial void OnLotSerialChanging(string value);
    partial void OnLotSerialChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnPurchasingPriceChanging(System.Nullable<decimal> value);
    partial void OnPurchasingPriceChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnEmployeeIDChanging(System.Nullable<int> value);
    partial void OnEmployeeIDChanged();
    #endregion
		
		public tblPurchasing()
		{
			this._tblCompany = default(EntityRef<tblCompany>);
			this._tblEmployee = default(EntityRef<tblEmployee>);
			this._tblProduct = default(EntityRef<tblProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurNo", DbType="Int")]
		public System.Nullable<int> PurNo
		{
			get
			{
				return this._PurNo;
			}
			set
			{
				if ((this._PurNo != value))
				{
					this.OnPurNoChanging(value);
					this.SendPropertyChanging();
					this._PurNo = value;
					this.SendPropertyChanged("PurNo");
					this.OnPurNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._tblCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int")]
		public System.Nullable<int> ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._tblProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotSerial", DbType="NVarChar(250)")]
		public string LotSerial
		{
			get
			{
				return this._LotSerial;
			}
			set
			{
				if ((this._LotSerial != value))
				{
					this.OnLotSerialChanging(value);
					this.SendPropertyChanging();
					this._LotSerial = value;
					this.SendPropertyChanged("LotSerial");
					this.OnLotSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasingPrice", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> PurchasingPrice
		{
			get
			{
				return this._PurchasingPrice;
			}
			set
			{
				if ((this._PurchasingPrice != value))
				{
					this.OnPurchasingPriceChanging(value);
					this.SendPropertyChanging();
					this._PurchasingPrice = value;
					this.SendPropertyChanged("PurchasingPrice");
					this.OnPurchasingPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
		public System.Nullable<int> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._tblEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCompany_tblPurchasing", Storage="_tblCompany", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public tblCompany tblCompany
		{
			get
			{
				return this._tblCompany.Entity;
			}
			set
			{
				tblCompany previousValue = this._tblCompany.Entity;
				if (((previousValue != value) 
							|| (this._tblCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCompany.Entity = null;
						previousValue.tblPurchasings.Remove(this);
					}
					this._tblCompany.Entity = value;
					if ((value != null))
					{
						value.tblPurchasings.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblCompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEmployee_tblPurchasing", Storage="_tblEmployee", ThisKey="EmployeeID", OtherKey="ID", IsForeignKey=true)]
		public tblEmployee tblEmployee
		{
			get
			{
				return this._tblEmployee.Entity;
			}
			set
			{
				tblEmployee previousValue = this._tblEmployee.Entity;
				if (((previousValue != value) 
							|| (this._tblEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblEmployee.Entity = null;
						previousValue.tblPurchasings.Remove(this);
					}
					this._tblEmployee.Entity = value;
					if ((value != null))
					{
						value.tblPurchasings.Add(this);
						this._EmployeeID = value.ID;
					}
					else
					{
						this._EmployeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProduct_tblPurchasing", Storage="_tblProduct", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true)]
		public tblProduct tblProduct
		{
			get
			{
				return this._tblProduct.Entity;
			}
			set
			{
				tblProduct previousValue = this._tblProduct.Entity;
				if (((previousValue != value) 
							|| (this._tblProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblProduct.Entity = null;
						previousValue.tblPurchasings.Remove(this);
					}
					this._tblProduct.Entity = value;
					if ((value != null))
					{
						value.tblPurchasings.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSalesDown")]
	public partial class tblSalesDown : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _SalesID;
		
		private System.Nullable<int> _ProductID;
		
		private string _LotSerial;
		
		private System.Nullable<decimal> _SalesPrice;
		
		private int _Quantity;
		
		private EntityRef<tblProduct> _tblProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSalesIDChanging(System.Nullable<int> value);
    partial void OnSalesIDChanged();
    partial void OnProductIDChanging(System.Nullable<int> value);
    partial void OnProductIDChanged();
    partial void OnLotSerialChanging(string value);
    partial void OnLotSerialChanged();
    partial void OnSalesPriceChanging(System.Nullable<decimal> value);
    partial void OnSalesPriceChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    #endregion
		
		public tblSalesDown()
		{
			this._tblProduct = default(EntityRef<tblProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesID", DbType="Int")]
		public System.Nullable<int> SalesID
		{
			get
			{
				return this._SalesID;
			}
			set
			{
				if ((this._SalesID != value))
				{
					this.OnSalesIDChanging(value);
					this.SendPropertyChanging();
					this._SalesID = value;
					this.SendPropertyChanged("SalesID");
					this.OnSalesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int")]
		public System.Nullable<int> ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._tblProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotSerial", DbType="NVarChar(50)")]
		public string LotSerial
		{
			get
			{
				return this._LotSerial;
			}
			set
			{
				if ((this._LotSerial != value))
				{
					this.OnLotSerialChanging(value);
					this.SendPropertyChanging();
					this._LotSerial = value;
					this.SendPropertyChanged("LotSerial");
					this.OnLotSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPrice", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> SalesPrice
		{
			get
			{
				return this._SalesPrice;
			}
			set
			{
				if ((this._SalesPrice != value))
				{
					this.OnSalesPriceChanging(value);
					this.SendPropertyChanging();
					this._SalesPrice = value;
					this.SendPropertyChanged("SalesPrice");
					this.OnSalesPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProduct_tblSalesDown", Storage="_tblProduct", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true)]
		public tblProduct tblProduct
		{
			get
			{
				return this._tblProduct.Entity;
			}
			set
			{
				tblProduct previousValue = this._tblProduct.Entity;
				if (((previousValue != value) 
							|| (this._tblProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblProduct.Entity = null;
						previousValue.tblSalesDowns.Remove(this);
					}
					this._tblProduct.Entity = value;
					if ((value != null))
					{
						value.tblSalesDowns.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSalesUp")]
	public partial class tblSalesUp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _SalesID;
		
		private System.Nullable<int> _CompanyID;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _CityID;
		
		private System.Nullable<int> _EmployeeID;
		
		private System.Nullable<int> _ShipperID;
		
		private EntityRef<tblCity> _tblCity;
		
		private EntityRef<tblCompany> _tblCompany;
		
		private EntityRef<tblEmployee> _tblEmployee;
		
		private EntityRef<tblShipper> _tblShipper;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSalesIDChanging(System.Nullable<int> value);
    partial void OnSalesIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnCityIDChanging(System.Nullable<int> value);
    partial void OnCityIDChanged();
    partial void OnEmployeeIDChanging(System.Nullable<int> value);
    partial void OnEmployeeIDChanged();
    partial void OnShipperIDChanging(System.Nullable<int> value);
    partial void OnShipperIDChanged();
    #endregion
		
		public tblSalesUp()
		{
			this._tblCity = default(EntityRef<tblCity>);
			this._tblCompany = default(EntityRef<tblCompany>);
			this._tblEmployee = default(EntityRef<tblEmployee>);
			this._tblShipper = default(EntityRef<tblShipper>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesID", DbType="Int")]
		public System.Nullable<int> SalesID
		{
			get
			{
				return this._SalesID;
			}
			set
			{
				if ((this._SalesID != value))
				{
					this.OnSalesIDChanging(value);
					this.SendPropertyChanging();
					this._SalesID = value;
					this.SendPropertyChanged("SalesID");
					this.OnSalesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._tblCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int")]
		public System.Nullable<int> CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					if (this._tblCity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
		public System.Nullable<int> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._tblEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipperID", DbType="Int")]
		public System.Nullable<int> ShipperID
		{
			get
			{
				return this._ShipperID;
			}
			set
			{
				if ((this._ShipperID != value))
				{
					if (this._tblShipper.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipperIDChanging(value);
					this.SendPropertyChanging();
					this._ShipperID = value;
					this.SendPropertyChanged("ShipperID");
					this.OnShipperIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCity_tblSalesUp", Storage="_tblCity", ThisKey="CityID", OtherKey="ID", IsForeignKey=true)]
		public tblCity tblCity
		{
			get
			{
				return this._tblCity.Entity;
			}
			set
			{
				tblCity previousValue = this._tblCity.Entity;
				if (((previousValue != value) 
							|| (this._tblCity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCity.Entity = null;
						previousValue.tblSalesUps.Remove(this);
					}
					this._tblCity.Entity = value;
					if ((value != null))
					{
						value.tblSalesUps.Add(this);
						this._CityID = value.ID;
					}
					else
					{
						this._CityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblCity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCompany_tblSalesUp", Storage="_tblCompany", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public tblCompany tblCompany
		{
			get
			{
				return this._tblCompany.Entity;
			}
			set
			{
				tblCompany previousValue = this._tblCompany.Entity;
				if (((previousValue != value) 
							|| (this._tblCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCompany.Entity = null;
						previousValue.tblSalesUps.Remove(this);
					}
					this._tblCompany.Entity = value;
					if ((value != null))
					{
						value.tblSalesUps.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblCompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEmployee_tblSalesUp", Storage="_tblEmployee", ThisKey="EmployeeID", OtherKey="ID", IsForeignKey=true)]
		public tblEmployee tblEmployee
		{
			get
			{
				return this._tblEmployee.Entity;
			}
			set
			{
				tblEmployee previousValue = this._tblEmployee.Entity;
				if (((previousValue != value) 
							|| (this._tblEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblEmployee.Entity = null;
						previousValue.tblSalesUps.Remove(this);
					}
					this._tblEmployee.Entity = value;
					if ((value != null))
					{
						value.tblSalesUps.Add(this);
						this._EmployeeID = value.ID;
					}
					else
					{
						this._EmployeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblShipper_tblSalesUp", Storage="_tblShipper", ThisKey="ShipperID", OtherKey="ID", IsForeignKey=true)]
		public tblShipper tblShipper
		{
			get
			{
				return this._tblShipper.Entity;
			}
			set
			{
				tblShipper previousValue = this._tblShipper.Entity;
				if (((previousValue != value) 
							|| (this._tblShipper.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblShipper.Entity = null;
						previousValue.tblSalesUps.Remove(this);
					}
					this._tblShipper.Entity = value;
					if ((value != null))
					{
						value.tblSalesUps.Add(this);
						this._ShipperID = value.ID;
					}
					else
					{
						this._ShipperID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblShipper");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblShippers")]
	public partial class tblShipper : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Phone;
		
		private EntitySet<tblSalesUp> _tblSalesUps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    #endregion
		
		public tblShipper()
		{
			this._tblSalesUps = new EntitySet<tblSalesUp>(new Action<tblSalesUp>(this.attach_tblSalesUps), new Action<tblSalesUp>(this.detach_tblSalesUps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblShipper_tblSalesUp", Storage="_tblSalesUps", ThisKey="ID", OtherKey="ShipperID")]
		public EntitySet<tblSalesUp> tblSalesUps
		{
			get
			{
				return this._tblSalesUps;
			}
			set
			{
				this._tblSalesUps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblSalesUps(tblSalesUp entity)
		{
			this.SendPropertyChanging();
			entity.tblShipper = this;
		}
		
		private void detach_tblSalesUps(tblSalesUp entity)
		{
			this.SendPropertyChanging();
			entity.tblShipper = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwAlis")]
	public partial class vwAli
	{
		
		private System.Nullable<int> _PurNo;
		
		private string _FirmaAdi;
		
		private string _Adres;
		
		private string _Tel;
		
		private string _GSM;
		
		private string _VergiDairesi;
		
		private string _VergiNo;
		
		private string _Faks;
		
		private string _Eposta;
		
		private string _Yetkili;
		
		private System.Nullable<int> _SehirID;
		
		private System.Nullable<int> _UrunID;
		
		private string _UrunAdi;
		
		private string _Calisan;
		
		private string _Unvan;
		
		private string _LotSerial;
		
		private System.Nullable<System.DateTime> _Tarih;
		
		private System.Nullable<int> _Adet;
		
		private System.Nullable<decimal> _AlisFiyati;
		
		public vwAli()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurNo", DbType="Int")]
		public System.Nullable<int> PurNo
		{
			get
			{
				return this._PurNo;
			}
			set
			{
				if ((this._PurNo != value))
				{
					this._PurNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirmaAdi", DbType="NVarChar(500)")]
		public string FirmaAdi
		{
			get
			{
				return this._FirmaAdi;
			}
			set
			{
				if ((this._FirmaAdi != value))
				{
					this._FirmaAdi = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adres", DbType="NVarChar(350)")]
		public string Adres
		{
			get
			{
				return this._Adres;
			}
			set
			{
				if ((this._Adres != value))
				{
					this._Adres = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(20)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this._Tel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSM", DbType="NVarChar(20)")]
		public string GSM
		{
			get
			{
				return this._GSM;
			}
			set
			{
				if ((this._GSM != value))
				{
					this._GSM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VergiDairesi", DbType="NVarChar(100)")]
		public string VergiDairesi
		{
			get
			{
				return this._VergiDairesi;
			}
			set
			{
				if ((this._VergiDairesi != value))
				{
					this._VergiDairesi = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VergiNo", DbType="NVarChar(100)")]
		public string VergiNo
		{
			get
			{
				return this._VergiNo;
			}
			set
			{
				if ((this._VergiNo != value))
				{
					this._VergiNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Faks", DbType="NVarChar(20)")]
		public string Faks
		{
			get
			{
				return this._Faks;
			}
			set
			{
				if ((this._Faks != value))
				{
					this._Faks = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eposta", DbType="NVarChar(50)")]
		public string Eposta
		{
			get
			{
				return this._Eposta;
			}
			set
			{
				if ((this._Eposta != value))
				{
					this._Eposta = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Yetkili", DbType="NVarChar(50)")]
		public string Yetkili
		{
			get
			{
				return this._Yetkili;
			}
			set
			{
				if ((this._Yetkili != value))
				{
					this._Yetkili = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SehirID", DbType="Int")]
		public System.Nullable<int> SehirID
		{
			get
			{
				return this._SehirID;
			}
			set
			{
				if ((this._SehirID != value))
				{
					this._SehirID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrunID", DbType="Int")]
		public System.Nullable<int> UrunID
		{
			get
			{
				return this._UrunID;
			}
			set
			{
				if ((this._UrunID != value))
				{
					this._UrunID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrunAdi", DbType="NVarChar(100)")]
		public string UrunAdi
		{
			get
			{
				return this._UrunAdi;
			}
			set
			{
				if ((this._UrunAdi != value))
				{
					this._UrunAdi = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Calisan", DbType="NVarChar(100)")]
		public string Calisan
		{
			get
			{
				return this._Calisan;
			}
			set
			{
				if ((this._Calisan != value))
				{
					this._Calisan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unvan", DbType="NVarChar(100)")]
		public string Unvan
		{
			get
			{
				return this._Unvan;
			}
			set
			{
				if ((this._Unvan != value))
				{
					this._Unvan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotSerial", DbType="NVarChar(250)")]
		public string LotSerial
		{
			get
			{
				return this._LotSerial;
			}
			set
			{
				if ((this._LotSerial != value))
				{
					this._LotSerial = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tarih", DbType="Date")]
		public System.Nullable<System.DateTime> Tarih
		{
			get
			{
				return this._Tarih;
			}
			set
			{
				if ((this._Tarih != value))
				{
					this._Tarih = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adet", DbType="Int")]
		public System.Nullable<int> Adet
		{
			get
			{
				return this._Adet;
			}
			set
			{
				if ((this._Adet != value))
				{
					this._Adet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlisFiyati", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> AlisFiyati
		{
			get
			{
				return this._AlisFiyati;
			}
			set
			{
				if ((this._AlisFiyati != value))
				{
					this._AlisFiyati = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewUp")]
	public partial class ViewUp
	{
		
		private System.Nullable<System.DateTime> _Tarih;
		
		private System.Nullable<int> _SatisNo;
		
		private string _LotSeri;
		
		private System.Nullable<decimal> _SatisFiyati;
		
		private string _Kargo;
		
		private string _Personel;
		
		private string _UrunAdi;
		
		private string _Sehir;
		
		private string _FirmaAdi;
		
		private string _Adres;
		
		private string _Tel;
		
		private string _Gsm;
		
		private string _VD;
		
		private string _VN;
		
		private string _Eposta;
		
		private string _Yetkili;
		
		private int _Adet;
		
		public ViewUp()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tarih", DbType="Date")]
		public System.Nullable<System.DateTime> Tarih
		{
			get
			{
				return this._Tarih;
			}
			set
			{
				if ((this._Tarih != value))
				{
					this._Tarih = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SatisNo", DbType="Int")]
		public System.Nullable<int> SatisNo
		{
			get
			{
				return this._SatisNo;
			}
			set
			{
				if ((this._SatisNo != value))
				{
					this._SatisNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotSeri", DbType="NVarChar(50)")]
		public string LotSeri
		{
			get
			{
				return this._LotSeri;
			}
			set
			{
				if ((this._LotSeri != value))
				{
					this._LotSeri = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SatisFiyati", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> SatisFiyati
		{
			get
			{
				return this._SatisFiyati;
			}
			set
			{
				if ((this._SatisFiyati != value))
				{
					this._SatisFiyati = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kargo", DbType="NVarChar(200)")]
		public string Kargo
		{
			get
			{
				return this._Kargo;
			}
			set
			{
				if ((this._Kargo != value))
				{
					this._Kargo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Personel", DbType="NVarChar(100)")]
		public string Personel
		{
			get
			{
				return this._Personel;
			}
			set
			{
				if ((this._Personel != value))
				{
					this._Personel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrunAdi", DbType="NVarChar(100)")]
		public string UrunAdi
		{
			get
			{
				return this._UrunAdi;
			}
			set
			{
				if ((this._UrunAdi != value))
				{
					this._UrunAdi = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sehir", DbType="NVarChar(50)")]
		public string Sehir
		{
			get
			{
				return this._Sehir;
			}
			set
			{
				if ((this._Sehir != value))
				{
					this._Sehir = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirmaAdi", DbType="NVarChar(500)")]
		public string FirmaAdi
		{
			get
			{
				return this._FirmaAdi;
			}
			set
			{
				if ((this._FirmaAdi != value))
				{
					this._FirmaAdi = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adres", DbType="NVarChar(350)")]
		public string Adres
		{
			get
			{
				return this._Adres;
			}
			set
			{
				if ((this._Adres != value))
				{
					this._Adres = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(20)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this._Tel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gsm", DbType="NVarChar(20)")]
		public string Gsm
		{
			get
			{
				return this._Gsm;
			}
			set
			{
				if ((this._Gsm != value))
				{
					this._Gsm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VD", DbType="NVarChar(100)")]
		public string VD
		{
			get
			{
				return this._VD;
			}
			set
			{
				if ((this._VD != value))
				{
					this._VD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VN", DbType="NVarChar(100)")]
		public string VN
		{
			get
			{
				return this._VN;
			}
			set
			{
				if ((this._VN != value))
				{
					this._VN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eposta", DbType="NVarChar(50)")]
		public string Eposta
		{
			get
			{
				return this._Eposta;
			}
			set
			{
				if ((this._Eposta != value))
				{
					this._Eposta = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Yetkili", DbType="NVarChar(50)")]
		public string Yetkili
		{
			get
			{
				return this._Yetkili;
			}
			set
			{
				if ((this._Yetkili != value))
				{
					this._Yetkili = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adet", DbType="Int NOT NULL")]
		public int Adet
		{
			get
			{
				return this._Adet;
			}
			set
			{
				if ((this._Adet != value))
				{
					this._Adet = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
